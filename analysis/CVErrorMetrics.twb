<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.22.1108.1027                               -->
<workbook original-version='18.1' source-build='2020.4.24 (20204.22.1108.1027)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cv_error_metrics' inline='true' name='federated.1ybalbz1knz17d13sy2s10xoehkm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cv_error_metrics' name='textscan.0cv6ffl1c4z4ia13z7e6u1tc3tsd'>
            <connection class='textscan' directory='C:/Projects/grocery-sales/analysis' filename='cv_error_metrics.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0cv6ffl1c4z4ia13z7e6u1tc3tsd' name='cv_error_metrics.csv' table='[cv_error_metrics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='cv_split' ordinal='0' />
            <column datatype='integer' name='hp_combo' ordinal='1' />
            <column datatype='integer' name='max_depth' ordinal='2' />
            <column datatype='integer' name='num_leaves' ordinal='3' />
            <column datatype='integer' name='num_iterations' ordinal='4' />
            <column datatype='integer' name='early_stopping_rounds' ordinal='5' />
            <column datatype='real' name='learning_rate' ordinal='6' />
            <column datatype='real' name='tr_rmse' ordinal='7' />
            <column datatype='real' name='tr_nwrmsle' ordinal='8' />
            <column datatype='real' name='tr_nwrmsle_uw' ordinal='9' />
            <column datatype='real' name='tr_mae' ordinal='10' />
            <column datatype='real' name='te_rmse' ordinal='11' />
            <column datatype='real' name='te_nwrmsle' ordinal='12' />
            <column datatype='real' name='te_nwrmsle_uw' ordinal='13' />
            <column datatype='real' name='te_mae' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0cv6ffl1c4z4ia13z7e6u1tc3tsd' name='cv_error_metrics.csv' table='[cv_error_metrics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='cv_split' ordinal='0' />
            <column datatype='integer' name='hp_combo' ordinal='1' />
            <column datatype='integer' name='max_depth' ordinal='2' />
            <column datatype='integer' name='num_leaves' ordinal='3' />
            <column datatype='integer' name='num_iterations' ordinal='4' />
            <column datatype='integer' name='early_stopping_rounds' ordinal='5' />
            <column datatype='real' name='learning_rate' ordinal='6' />
            <column datatype='real' name='tr_rmse' ordinal='7' />
            <column datatype='real' name='tr_nwrmsle' ordinal='8' />
            <column datatype='real' name='tr_nwrmsle_uw' ordinal='9' />
            <column datatype='real' name='tr_mae' ordinal='10' />
            <column datatype='real' name='te_rmse' ordinal='11' />
            <column datatype='real' name='te_nwrmsle' ordinal='12' />
            <column datatype='real' name='te_nwrmsle_uw' ordinal='13' />
            <column datatype='real' name='te_mae' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cv_split</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cv_split]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>cv_split</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hp_combo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hp_combo]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>hp_combo</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_depth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_depth]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>max_depth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_leaves</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_leaves]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>num_leaves</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_iterations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_iterations]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>num_iterations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>early_stopping_rounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[early_stopping_rounds]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>early_stopping_rounds</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>learning_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[learning_rate]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>learning_rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tr_rmse</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tr_rmse]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>tr_rmse</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tr_nwrmsle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tr_nwrmsle]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>tr_nwrmsle</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tr_nwrmsle_uw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tr_nwrmsle_uw]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>tr_nwrmsle_uw</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tr_mae</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tr_mae]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>tr_mae</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>te_rmse</remote-name>
            <remote-type>5</remote-type>
            <local-name>[te_rmse]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>te_rmse</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>te_nwrmsle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[te_nwrmsle]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>te_nwrmsle</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>te_nwrmsle_uw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[te_nwrmsle_uw]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>te_nwrmsle_uw</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>te_mae</remote-name>
            <remote-type>5</remote-type>
            <local-name>[te_mae]</local-name>
            <parent-name>[cv_error_metrics.csv]</parent-name>
            <remote-alias>te_mae</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='cv_error_metrics.csv' datatype='table' name='[__tableau_internal_object_id__].[cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Cv Split' datatype='integer' name='[cv_split]' role='dimension' type='ordinal' />
      <column caption='Early Stopping Rounds' datatype='integer' name='[early_stopping_rounds]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Hp Combo' datatype='integer' name='[hp_combo]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Learning Rate' datatype='real' name='[learning_rate]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Max Depth' datatype='integer' name='[max_depth]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Num Iterations' datatype='integer' name='[num_iterations]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Num Leaves' datatype='integer' name='[num_leaves]' role='dimension' type='ordinal' />
      <column caption='Te Mae' datatype='real' name='[te_mae]' role='measure' type='quantitative' />
      <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
      <column datatype='real' name='[te_nwrmsle_uw]' role='measure' type='quantitative' />
      <column caption='Te Rmse' datatype='real' name='[te_rmse]' role='measure' type='quantitative' />
      <column caption='Tr Mae' datatype='real' name='[tr_mae]' role='measure' type='quantitative' />
      <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
      <column datatype='real' name='[tr_nwrmsle_uw]' role='measure' type='quantitative' />
      <column caption='Tr Rmse' datatype='real' name='[tr_rmse]' role='measure' type='quantitative' />
      <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[te_nwrmsle_uw]' derivation='Avg' name='[avg:te_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
      <column-instance column='[te_rmse]' derivation='Avg' name='[avg:te_rmse:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_nwrmsle_uw]' derivation='Avg' name='[avg:tr_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_rmse]' derivation='Avg' name='[avg:tr_rmse:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hp_combo]' derivation='None' name='[none:hp_combo:ok]' pivot='key' type='ordinal' />
      <column-instance column='[te_nwrmsle]' derivation='Sum' name='[sum:te_nwrmsle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[te_nwrmsle_uw]' derivation='Sum' name='[sum:te_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
      <column-instance column='[te_rmse]' derivation='Sum' name='[sum:te_rmse:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_nwrmsle]' derivation='Sum' name='[sum:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_nwrmsle_uw]' derivation='Sum' name='[sum:tr_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tr_rmse]' derivation='Sum' name='[sum:tr_rmse:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:hp_combo:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>5</bucket>
            </map>
            <map to='asterisk'>
              <bucket>15</bucket>
            </map>
            <map to='asterisk'>
              <bucket>25</bucket>
            </map>
            <map to='circle'>
              <bucket>1</bucket>
            </map>
            <map to='circle'>
              <bucket>11</bucket>
            </map>
            <map to='circle'>
              <bucket>21</bucket>
            </map>
            <map to='diamond'>
              <bucket>6</bucket>
            </map>
            <map to='diamond'>
              <bucket>16</bucket>
            </map>
            <map to='diamond'>
              <bucket>26</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>18</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>28</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>19</bucket>
            </map>
            <map to='plus'>
              <bucket>3</bucket>
            </map>
            <map to='plus'>
              <bucket>13</bucket>
            </map>
            <map to='plus'>
              <bucket>23</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>10</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>20</bucket>
            </map>
            <map to='square'>
              <bucket>2</bucket>
            </map>
            <map to='square'>
              <bucket>12</bucket>
            </map>
            <map to='square'>
              <bucket>22</bucket>
            </map>
            <map to='times'>
              <bucket>4</bucket>
            </map>
            <map to='times'>
              <bucket>14</bucket>
            </map>
            <map to='times'>
              <bucket>24</bucket>
            </map>
            <map to='triangle'>
              <bucket>7</bucket>
            </map>
            <map to='triangle'>
              <bucket>17</bucket>
            </map>
            <map to='triangle'>
              <bucket>27</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nrmse:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:tr_nwrmsle:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:tr_rmse:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:tr_nwrmsle_uw:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:te_rmse:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nrmse:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:te_nwrmsle_uw:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[sum:te_nwrmsle:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cv_error_metrics.csv' id='cv_error_metrics.csv_A5712404D2484F9FB5CFFD6E4D75C7A3'>
            <properties context=''>
              <relation connection='textscan.0cv6ffl1c4z4ia13z7e6u1tc3tsd' name='cv_error_metrics.csv' table='[cv_error_metrics#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='cv_split' ordinal='0' />
                  <column datatype='integer' name='hp_combo' ordinal='1' />
                  <column datatype='integer' name='max_depth' ordinal='2' />
                  <column datatype='integer' name='num_leaves' ordinal='3' />
                  <column datatype='integer' name='num_iterations' ordinal='4' />
                  <column datatype='integer' name='early_stopping_rounds' ordinal='5' />
                  <column datatype='real' name='learning_rate' ordinal='6' />
                  <column datatype='real' name='tr_rmse' ordinal='7' />
                  <column datatype='real' name='tr_nwrmsle' ordinal='8' />
                  <column datatype='real' name='tr_nwrmsle_uw' ordinal='9' />
                  <column datatype='real' name='tr_mae' ordinal='10' />
                  <column datatype='real' name='te_rmse' ordinal='11' />
                  <column datatype='real' name='te_nwrmsle' ordinal='12' />
                  <column datatype='real' name='te_nwrmsle_uw' ordinal='13' />
                  <column datatype='real' name='te_mae' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='RMSE vs NWRMLSE' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Hp Combo' />
        <param name='target' value='RMSE vs NWRMLSE' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg CV Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[te_nwrmsle_uw]' derivation='Avg' name='[avg:te_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[te_rmse]' derivation='Avg' name='[avg:te_rmse:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle_uw]' derivation='Avg' name='[avg:tr_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_rmse]' derivation='Avg' name='[avg:tr_rmse:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[te_nwrmsle_uw]' role='measure' type='quantitative' />
            <column caption='Te Rmse' datatype='real' name='[te_rmse]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle_uw]' role='measure' type='quantitative' />
            <column caption='Tr Rmse' datatype='real' name='[tr_rmse]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{AC70A483-2FAC-4CAA-96CB-F845C770DA40}' />
    </worksheet>
    <worksheet name='Avg Performance by HP Combo'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Hp Combo' datatype='integer' name='[hp_combo]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Learning Rate' datatype='real' name='[learning_rate]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Max Depth' datatype='integer' name='[max_depth]' role='dimension' type='ordinal' />
            <column-instance column='[hp_combo]' derivation='None' name='[none:hp_combo:ok]' pivot='key' type='ordinal' />
            <column-instance column='[learning_rate]' derivation='None' name='[none:learning_rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[max_depth]' derivation='None' name='[none:max_depth:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_iterations]' derivation='None' name='[none:num_iterations:ok]' pivot='key' type='ordinal' />
            <column-instance column='[num_leaves]' derivation='None' name='[none:num_leaves:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Num Iterations' datatype='integer' name='[num_iterations]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Num Leaves' datatype='integer' name='[num_leaves]' role='dimension' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
              <text column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]' />
              <text column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]' />
              <text column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]' />
              <text column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'>LR:</run>
                <run fontsize='8'><![CDATA[ <[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'>MD</run>
                <run fontsize='8'><![CDATA[: <[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'>NL</run>
                <run fontsize='8'><![CDATA[: <[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'>NI</run>
                <run fontsize='8'><![CDATA[:<[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk])</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</cols>
      </table>
      <simple-id uuid='{2CCD02CA-DD96-4E2B-A6C8-4E279EDEB347}' />
    </worksheet>
    <worksheet name='Avg Performance by Learning Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Learning Rate' datatype='real' name='[learning_rate]' role='dimension' type='ordinal' />
            <column-instance column='[learning_rate]' derivation='None' name='[none:learning_rate:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk])</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</cols>
      </table>
      <simple-id uuid='{511971E7-90CE-4A15-B8FC-255EE1D743FC}' />
    </worksheet>
    <worksheet name='Avg Performance by Max Depth'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Max Depth' datatype='integer' name='[max_depth]' role='dimension' type='ordinal' />
            <column-instance column='[max_depth]' derivation='None' name='[none:max_depth:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk])</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</cols>
      </table>
      <simple-id uuid='{2CBF4969-8593-47D8-BE69-B1249E434EB5}' />
    </worksheet>
    <worksheet name='Avg Performance by Num Iterations'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[num_iterations]' derivation='None' name='[none:num_iterations:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Num Iterations' datatype='integer' name='[num_iterations]' role='dimension' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk])</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</cols>
      </table>
      <simple-id uuid='{EB756199-5B6C-4A87-AA26-09444B68310F}' />
    </worksheet>
    <worksheet name='Avg Performance by Num Leaves'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[num_leaves]' derivation='None' name='[none:num_leaves:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Num Leaves' datatype='integer' name='[num_leaves]' role='dimension' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk])</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</cols>
      </table>
      <simple-id uuid='{82FFC25B-5B8B-48BD-B335-5B7A3FCE3688}' />
    </worksheet>
    <worksheet name='Avg Performance by Split'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[te_nwrmsle]' derivation='Avg' name='[avg:te_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[te_nwrmsle_uw]' derivation='Avg' name='[avg:te_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[te_rmse]' derivation='Avg' name='[avg:te_rmse:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle_uw]' derivation='Avg' name='[avg:tr_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_rmse]' derivation='Avg' name='[avg:tr_rmse:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cv Split' datatype='integer' name='[cv_split]' role='dimension' type='ordinal' />
            <column-instance column='[cv_split]' derivation='None' name='[none:cv_split:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[te_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[te_nwrmsle_uw]' role='measure' type='quantitative' />
            <column caption='Te Rmse' datatype='real' name='[te_rmse]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle_uw]' role='measure' type='quantitative' />
            <column caption='Tr Rmse' datatype='real' name='[tr_rmse]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_nwrmsle_uw:qk] + ([federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk] + [federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:te_rmse:qk])))))</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</cols>
      </table>
      <simple-id uuid='{BF7E6E62-54EC-441D-9177-E359B1B4A08F}' />
    </worksheet>
    <worksheet name='NWRMLSE vs NWRMLSE_UW'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_nwrmsle_uw]' derivation='Avg' name='[avg:tr_nwrmsle_uw:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cv Split' datatype='integer' name='[cv_split]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Hp Combo' datatype='integer' name='[hp_combo]' role='dimension' type='ordinal' />
            <column-instance column='[cv_split]' derivation='None' name='[none:cv_split:ok]' pivot='key' type='ordinal' />
            <column-instance column='[hp_combo]' derivation='None' name='[none:hp_combo:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
            <column datatype='real' name='[tr_nwrmsle_uw]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:hp_combo:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:hp_combo:ok]' member='1' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='2' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='3' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]' />
              <shape column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' />
              <lod column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle_uw:qk]</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]</cols>
      </table>
      <simple-id uuid='{D1DF209C-0D50-4813-A8A3-3381DAB8EB87}' />
    </worksheet>
    <worksheet name='RMSE vs NWRMLSE'>
      <table>
        <view>
          <datasources>
            <datasource caption='cv_error_metrics' name='federated.1ybalbz1knz17d13sy2s10xoehkm' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybalbz1knz17d13sy2s10xoehkm'>
            <column-instance column='[tr_nwrmsle]' derivation='Avg' name='[avg:tr_nwrmsle:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tr_rmse]' derivation='Avg' name='[avg:tr_rmse:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cv Split' datatype='integer' name='[cv_split]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Hp Combo' datatype='integer' name='[hp_combo]' role='dimension' type='ordinal' />
            <column-instance column='[cv_split]' derivation='None' name='[none:cv_split:ok]' pivot='key' type='ordinal' />
            <column-instance column='[hp_combo]' derivation='None' name='[none:hp_combo:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[tr_nwrmsle]' role='measure' type='quantitative' />
            <column caption='Tr Rmse' datatype='real' name='[tr_rmse]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:hp_combo:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:hp_combo:ok]' member='1' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='2' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='3' />
                <groupfilter function='member' level='[none:hp_combo:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]' />
              <shape column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' />
              <lod column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]' />
              <lod column='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_nwrmsle:qk]</rows>
        <cols>[federated.1ybalbz1knz17d13sy2s10xoehkm].[avg:tr_rmse:qk]</cols>
      </table>
      <simple-id uuid='{8783679C-2B7E-48C8-8076-5F57696135B2}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Avg CV Performance'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E27281BF-2500-45E4-91A3-2A2385ECB294}' />
    </window>
    <window class='worksheet' name='Avg Performance by Split'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78D504A6-C919-4974-978F-8D506957E45A}' />
    </window>
    <window class='worksheet' name='RMSE vs NWRMLSE'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='2' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]' type='color' />
            <card pane-specification-id='2' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83309B7C-AA10-478E-887E-13AC11811E6D}' />
    </window>
    <window class='worksheet' name='NWRMLSE vs NWRMLSE_UW'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='4' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]' type='color' />
            <card pane-specification-id='4' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{641D322B-B582-4898-BA99-B6AB54C1BCF6}' />
    </window>
    <window class='worksheet' name='Avg Performance by HP Combo'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6F27C9C-5A38-4373-A0F2-EE4C56EEFC97}' />
    </window>
    <window class='worksheet' name='Avg Performance by Learning Rate'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86A35E14-D012-40F1-B12A-CED2F188C9BB}' />
    </window>
    <window class='worksheet' name='Avg Performance by Max Depth'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89C37562-C87B-4E94-885A-71C2F9F39F6E}' />
    </window>
    <window class='worksheet' name='Avg Performance by Num Iterations'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE3F19AB-021C-41A3-8C12-089640038BCF}' />
    </window>
    <window class='worksheet' maximized='true' name='Avg Performance by Num Leaves'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[:Measure Names]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:cv_split:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:hp_combo:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:learning_rate:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:max_depth:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_iterations:ok]</field>
            <field>[federated.1ybalbz1knz17d13sy2s10xoehkm].[none:num_leaves:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04A2F0DF-D0EC-4C10-AAA1-78FE17920120}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg CV Performance' width='192'>
      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
      mNMIAQjmNP8fuYFKUA4GTLwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by HP Combo' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by Learning Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by Max Depth' width='192'>
      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
      fNoI//8DZLaKGw9lPYQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by Num Iterations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbBklEQVR4nO3daXhU153n8e+599atRVtJQioJJCRAYt8xYAxeBoidxIm3tB1ncTsz3c70
      TGcZdzr99GT6VZ6Znsky05Mn/Tz9JJ1OujvtieN4CXZIjDcwu8EYxI6EJBBa0b5UqarucuaF
      zC5AUmlD93xe8VSdW/xV9/7q3PUcIaWUKIoHCSGENtFFKMpEUgFQPE0FQPE0FQDF01QAFE9T
      AVA8TQXgOna8j51bX2D/mYtIwEq0sP3dgyRsN4UP7eXDne9S254YtTovc5Oc2vc2xxtio//Z
      HqACcB073sPr7/yOd159nbZ+Bytez6svv0fcSuFyidXN9tdf4WRzAqK1/Ph//YAz7SP/uGTV
      23znx68TtQHXprH6OPVdYxAuDzAmuoBJKXMey/J7qahu4Z7iSy8m2PHKS/iXPsK68gBbfvki
      5RsfJX5oCyfsQuINx+lLn8v9cw227zxG6YbHePze+Tf8wuz9w294f99eLsQFGzY/wieWZvDu
      797gdGMfn3/uawTbj/DqwS42lfTz3rkMHr4nwjtb36GpJ870hffx6XWzeOuVV/joQ4u/s1p4
      9KlHCadn0iEErh3n9P63eXPfKYIF8/jMww9SSA0/eekI5flw9GwTyx56mk0Ls3h/y8scrGkl
      u3gFT/3RRrJ8+jh/yZOD6gEGJVh370oqdh0kennPx6b+7CmauhOATc3pk7RH47TWnKRJFvLl
      Zz6Pfew92vLX8+yjqzm4cy+D7ZTc89BjLJ07n2f+81/yyIa5fLD1Jboi6/j6177Kz361m+6u
      Zj7Yv509J/pYtaKMYCibzU/9Cd9+/qs073uVyh6TJx75JMVLNvLNbzzHkqIMWmtOUNeRoPnk
      e/zr2xf4yje+xbrsJn7+ynaSiXYOHDjBrPWP84WNRfxu6x6itYd486TLf/gvz/OZFSXYePdm
      ANUD3ERG6WoWBX/CvlOB27bNyYsQDGhkhsLk54UJdqZhGPqQNqvTR/ZwXHTQ8GGI0nn3IWUf
      AX8hjz/7BdJ1jfqKt3jhjQ8QpklVcx+rLOumn3XxbCUZC9aS49cxFy4h9v5B2llJek4+07JC
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by Num Leaves' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3RcWX7n93mhMgooZCIQBAEiEgQBAsyhc3N6utUTdkZSz0xrpZVGlrS2
      do9tSZaP//Dauz4+snfPruxVWEuzozQahZ4ZzUxPN7tJdjMnEAQzCQJEzqEAVA7vXf8BEiQI
      MBSBIgHW/ZyDQ56qd+v9qur3rZu/VxFCCCSSFERRFEV93kFIJM8TKQBJSiMFIElppAAkKY0U
      gCSlkQJ4SvouHuSP/uInBAyBb7SDHx86+xSvIrh25EdcHAgte3ySJ0MK4CnxDvZw+1YrZ2+O
      EZ4Z4cK1LoxYGO+UDwH4piaJxON4Jyfwjo8yODRGMDDD4MAA/kicu2PPAzfO0+eNAiDMOOMj
      gwyOjBMzBEY0xMjgAANDI4RjBoFpL8FoHEQc76SXuGEwNT7CwOAw4ZgxW354kIHBESJx87l9
      NqsJ/XkHsGpRNDZt20XHuRNU7soDwNd/hf/8T1f5nX/9z/nBn/1H6n7h1/n0P/97Kvfsp+/8
      YTLq38DjvUiXey//6uvbUe5/PWFy69SHfNYZxWNOoK9/iVdLoxy/0Et4vJNI/i6qI+cZLHid
      n6uM88ffPc5XX6/kyIV+8h1hJuzV7C+b4a+PjlC3zk1+zUtsrch5Lh/NakLWAEvAmVvKBpeX
      iz1TD7/I4WHbrpfYXV9IzrotfPnN3UxNTC+8zohy+MCnTM5MMeHz0dPTg2KxE5seZXLKx42u
      LqobG+i/cZ3Om1coqGmk/cRh+sbHGfMFGOzqwFSsREIBnDnrqSz2IGc4H4+sAZaCotO4bQt/
      +lc/IO7eiKIoYBrEYxFC0XiCr6Xgdrspf/WrvFaVQSAU4tQHf0Lapvd42dnDnx/pJ7OkmjT/
      WT47H2fnV97AO+akuu5N3ttXSSgYQjENfvtfbOTip9/jzwZN/vuvNSfnfb9ASAE8JY6MHLJc
      NjxF1dTmO7lszcSVV0KJ7Qj/+IMDmM4cnFYrBYWFWHUVlycfj1MDaxpFefcaP+nZa/j0k+8R
      HtnK/q/9PN/74V/QezaHisY9bKir50fHfkKkOJuc7CwUi4eGGg+fXtPZUJCB9s7X+N73f8Kf
      d5xmbc0WNucaHDxxgWBAp+mVouf46aweFLkWSJKqKIqizKsBTNMkEAg8r3gkkmfOgibQSqoQ
      /H4/VqsVq9X6vEORLBOBQABN07Db7c87FOABAaiqSnp6+vOKZQHxeByHw4HD4XjeoUiWCSEE
      uq7jcrmedyiAHAaVpDhSAJKURgpAktJIAUhSmuRMhIk4t69fZsp0U79xA/qdeZ94aJK2i+3M
      zpFqFFdUU+Sx09NxnSnDSU1lGTZdajLlEAa97dcYi9io27gBmzabAyI6Q2vrNWIAqKxZX8W6
      XBf9t28wFrJQU12Bw7K0fElKtvVcPMWQkU6WOsax1q57N7O4WF9eTnl5Oc74BON+k8GbLfT5
      bbiNCU5f7pLrV1KQwRvn6Q5YyLFOc6LlFubdJNDtlN7Jl0zFy/CMwURXG+3jKtmWACfO31hy
      viRFAF2TYZpr1rOuZhuxyc57N9NtZOfmkpVuw2u4qVlrZ2gwSt3mSspqa1EnxggnIyDJiqZv
      wkd9zQbWVTWhBPow7ihAUa1k5+aSnZnOsN9KQ3k6/d0z1DfXUFJZg8M3SXCJ905KE0jTNVRF
      ARR0i/bAs4KJvpukFVRiUwWGasOmKyhYcKgCg9nxfyEEhmEQi8VQVdkselGIxWJz/yqKgq7r
      KKqKrmmgKFis+p3J2LvrpQS+oWtY8muwq4KYYsOhKyhoODVIcMnhApIiACVmEDFNdDVGLDL/
      OTMW4npvkG0v5QAGdi3ATMjErgaZUXSsgK7PhqVpGhaLBZvNlowwJc+BcDiMrutYLJa5x1RT
      EIrGSLMIIiETRb23WFCYBhdvjNP0agNg4rKE8AZMXNYIU0JlqfPJSRFAfXURn3z4ETYilDS9
      jmmEuN4+wMaacryDN7DnV+LQFECjtKKYI598iKYK1tbtxPLYV5e8aFRXlHDo0AF0YhTU7UVX
      4ly5cpuNGysJjF5DZFfj0hRApbSmnIOf/ITLFoW8iq0sdZFMclaDCkEsFsVExWqxAIJ43MBi
      0TANA6FoaHdULoTAiMcwhILVos+uqb/D5OSkXArxgjE9Pb1wKYQQxOflAMRiBrqugTAwWTxf
      LBb9TlP76ViwGnTZUBQs1vubLbPBAqia/sClCrrFKjcmpDKL5MDdfEHR0eZdurz58sLknRAC
      wxR0DEzSNeglGInhSXNQXZJNYY4bYF7tIpHACyAAIQSmEBxp6+FvD15hbMqHemd0WAAoKjXr
      8nh/fz3VJTmrXgR33+/AmI8bveNM+cM4bRbWF3ioKM7Goqur/j0+S1a9AAxD8Kc/aeFoy3X2
      2C6zNeMGa/VRHEqEadNFR6yI44P1/NvvjvPLX2zmteayJbUbnydCCK51j/HXn1zies/4gkmg
      XI+TX3i1jlcaS9FURQrhCVjVAhBC8P3DV7h14Tj/m+efKNQn5j2fo82Qo82wzXaD89FK/uHj
      EJluB01VBasuOUxT8GlLJ9/5WRvhh2y4H5sK8v/+4Cw3esf4jXebsegPzsFIHmRVC6B/bIYL
      pz7j9zK+R5r68DlkVRFstd3ErQT56LN0qkrexu1cPXMLQghabg7yX3/WRjgaw0qMtfooFZYB
      MlQ/IWGjJ55PR6yYgLBzsKWLDJed99+sX3VCf9asagEcPneTbzt/8Mjkv59qax8DUz+mvXcb
      TdXFSY5u+fCHovzd4StEolE2W2/zVedRyvRBHsztScPNh6GdHA418qNjN3ipoZR1+RnPJ+hV
      wqpeY5DWf5CiB5o9j2O79QqTPVeTFFFyuNE7TtfgBG84zvHfpX9AuWVh8gNkaT7eT/uEb7t/
      imZGOHC249kHu8pY1TVASaAFEqzh09QwOf4rwP6kxJQMrtwepclyk6+7PseuxB57/S77VWZM
      F0c7pTXi41jVNUCROvxMyz0vwjPjvOs6/kTJf5c3HC24AreTGNWLwaoWgFONPtNyz4sqSz8l
      2khCZTTF5BV7W5IienFY1QLQXLlPVy7t6co9L2ptvahPMZiz0da7/MG8YKxqAehFjU9XrrBh
      mSNJLuliETfpJyr3CNdqCbDKBWCpfRcSPOlV8ZSgFTclKaLkoFiebs5CfcpyqcSqFoC2dhv6
      hjcSKGDB2vg+atqa5AWVBNSssmdaLpVIkiuEwUh/LwFhZ93aArT72q9mPMpQfx8RxU5xcSFK
      zE9f7xBxwOHJY22e54lvoygqtlf/Z0RwAmOg5dEXaxYsm9/DUvcVFh1EX8Hoa7cTtTgglthZ
      Ynr5q0mKaJkRJmODfczELZSsLcAyb0dYnOG+XoKmhaK1xVhEkN6uAWKAzZ3NuoLsJd06KTXA
      0M3zXOnzMjN4jbPXBuYeF2aca+dPMTgdJhKcIRCOMzHQzu0h31PfS3VkYX/nP2DZ/ItgW9zX
      VMlYi23f72Db/dso+sowZU0ENbcKvezlhMooaflYar+UlHiWm7GuS1y8PYp/5BZnLnVzd4uW
      EIL21pP0eoPEQjP4QzH8o51c712+vk1SaoD2wWl27XsNu2bw6cGjsHH2sIZ4eIr+yRjl6xUU
      hwe3w8LExCjCUgiajZxMd+I3UxRUZxa2l38fy6avY/Sexhi7CREfiisHrbABrXgrqrtg1f3y
      30XRbdh2/BbmeAfmxK3HF9Ad2F/9X8C+OpZBdA1OsqVpL1kOhcOHjxA3S7FoCogAnYMBKqty
      MC3pZLisjHSOIGy5CMVCTvaTtxYeRlIEoOoauqIAOvp9xkVxw8fURAS1ys7UwHUuRhWqK5vQ
      vAFCUwMcOz3Nq3vr4WldIdJLoa50XrVm3vkjurrG/hfgKkR99X+F43+AOXQJHuKIo7hy0Xb/
      DxjFOzFW4HtezBUCVcGq66AoWG3anCuEED4mx8IodXbC4x2cC0JjWSO1Ez4ivjGOHhvn9de2
      LmkfeVIEIOIGMVOgq3Fi0XtflKalkZHvoaysjJDHxoXb4zjKa1nvyQMjm5GP2ogALukKsTjF
      mzHf/UPi1z8kfusTjKkeiPhAt6G6C9FKtmOt/wWUzNKkrAKNxAz6x6aZ9kcQQpCRZmdtbjo2
      65On0WKuEIopiMTipFkgGjbuxa64ychLp6ysjNgaD6dab2Or3cL69Bww8xn98DQhWHkCqC3N
      4cjRE6QrPrLXN2OaEXr7xlm3Np8CR4Ajx8+gxnysqWyko+0sY1EVItMo+SWspu3vQgiGJv20
      XB/kavcoEzMhbBaddfkZbKksYFN5PrYFvkhLQ3VmY93yPpZN/wwR8iLiYRTVAvZ0FLsnKYkf
      jsY5erGHj890MOL1E7pzzrHDqpPrcbF/azmvbCnFYXu6VNxQks/pUydJ18M4CzeiqwZdXUOU
      lhZTlmvw2bHT2Awf2esb6blynoGAQIv7iWTnstRTBpLkCmEyPTlOWFjJzfagYDA9E8ST4caM
      R5mcmASriyyPGxGP4PVOYSgWsrI8WLR7DZiV7AoRjRv87NQtfnziJhMzC0dnLLpK3fo8fuWL
      jZTkpa/adflT/jB/+uPznLnWP+fY9iCqorClsoB/+ZWtZKU/+rta3BXCZMY7ScjQyMn2oKmC
      qSk/GRluEHEmxycxdQfZmelgRPF6vcSFTmZWJtYleMkqiqKs6EPyVqoAYnGDvzpwiQ9PtxM3
      Hv3xFWSn8bvv7aasMPMZRbd8hKNx/tM/nuHUlb4n8uBsqizgd97b9ciaYFEBPCcURUlwGlWC
      EIKjF3v46anHJz/A0ISfP/7ROfyhldchfRxHL/Zw5lr/ExvQXrg1zKctq2sFqhRAgvhDUT44
      cv2hzYHFaO+f5Nil3hV1AOHjiMYMPj7TkdD7NIXgozMdRBI9JPw5IgWQILf6JxkYT3zi7uSV
      PmJxMwkRJYf+sRlGvP6Ey03OhOgaXj2L8KQAEuRWf2JbMO/SOzJFJLZ6fhm9vhChSOLxRmMG
      E9NLNS1/dkgBJMi0P/L4ixbBF4wm1Jx43ggeNtX2uHKCVdTSW917gp8Hac4H/YgFWaqPDZZ+
      MlU/UaEzEM/hdryQ+H0fr9NuQX2aXS3PiXSnDbtFJxh58m2YAFZdw+NePeutpAASpLwwa+7/
      Bdo4P+/6jAZrBxrGfUc6KEyabn4c3MPRcD1x9NkZ02WeFEsmJfkZZGc4CI7OCsCj+njF3spm
      ayf5mhcFwZjh4VK0nEPhLUyas+uO0l02ylfRkK8UQIJUr8shJ8NJYfASv5H+Y9xKcMEaOwVB
      jjbDr6T9jGpLD9/xf5FttcVYV5FTm82i8UZzGd/9qI29tgt8w3UIpxKe917T1GFK9WH2O8/y
      d/5XORhu5vWmMuwJLI143qyeSFcI6U4r397hZG3Lj0lXH93ZU5RZixKbO5Omxq+tqtlgRVF4
      o7kM6/Xvs8P3Ebqy+AiWooCdGN9K+4TyHI19u766qt6n7AQnihGl3vvBY5P/fpqMUzi811hV
      vUPAOnGZPdGHJ//9aIpgT/wQttHzzyCy5UMKIEFMbzdG94kECxnELv8DQhjJCSoJCGESPfcd
      iAaevJARIXr2vyDE6pnvkAJIEKPvLDzFF2wMXYLo6hkfF9P9mCOJW0gaY+2Yk93LH1CSkAJI
      ENM39FTlRGAMYa6eiTBzZhARmUm8YCyImOpZ/oCShBRAgijKU47kqKtnBAiAWBieRrCmgYit
      nppOCiBBlMx1T1VOdRegaEs91PMZYkuDp4lXs6Cskr3IkKRh0Hh4mrMnTzNjutixZwce+53b
      CEFwaoTzrW2E1HS27dyOy/TR2nKOacPFluYmctwre/ujXryViO6AeGIWJdrarWB1Jimq5Uf1
      lKA4MhEJNvkUaxpqVnlCZYyIj9YzZxiPWGneuZ2cNNvspKIQRPwTtJw7j890sHXXbjxaiLZz
      ZxiLWGhs3kZ+xtJmnZNSA1xvOUvOxl3sayzg9Okrc4+bRpiW1ivU7niVl3c1YFcF3VdbcZZu
      ZWdNLhcutbPSxw+U9EL06rcSK2R1Y9n0dVbT9gvVlYu+blfC5bS121DdiRmPdV5uxV7ayMvN
      62g9dxlT3D3k0OTs6XNUbn2Z1/c149QEAzfOIwoa2NdQyoULV1jquFpSaoDJuMKunDR0NQ3d
      PDT3eDQ8ycS4n7bjBzGsHrZur8c7baWm2YMbK2lXLhICHOasDIQQmKaJYayk4UMVvenXMAYv
      ISaf4AAKVUff+muQWbbC3sfj0Rq+RaznJDxpLeDIRm/6Fxjmw3/GTNOc+wNQVRVvxKA2LxOH
      PRu72oFhgKaDMKcYHQkSO3WYqOqieWczY2OwoT4bJ2lkxXoJAIu7QT0ZSRHA/TOB82YFRQzN
      kcu+13cy3X+Nqze6sCjqnTU0ylx1JISY92c+4gN9LrgLsO3/d0Q/+7eYw1d46LpJqwtr06+g
      1r+HKXiq4dPniqcU20u/R/Tw/44IPmYZuD0D20u/C9kVj/y+7v9O5+XGXSOIebPIcbB42PPa
      K4THO2m5eJP0uXzhqRyzHyQpAkhTTIZ9YfK1KWLintmVxZqNrl0nGjfRdCuaKshwhRgcDbDW
      Mo7P5sTOrB0KzP463LVGWXGs2Yj27h8Su/wB8fYDmP7h2XF+VUdxeNDyarE0fhOtuBlFXcUr
      Tja8hmrPIHLyD2f9iB6czFNU1LxabLt/G71k52PNxzRNQ9O0WT+gO6TpKiNeHzZ3hHDMwV1f
      BEXJwm73EZnLF52sjDh9gz7s7gCTmpWl9qqSsik+6hvh6PEWwsJC056XyHcZXL7ay+ZNlYz2
      XOf8lW40VybN27fijE1y+sx5gsJGffMOirPvbZZeqZvi5yEEIuLDnO5HRP2g6qiuXJT0QpTV
      NvT5CETEh9HfQrznFOZ0LwiBmlGMtm4XevFWFPuTNUQW2xQfC4xz8uQ5fFGV+h17WJtt4WLb
      LTZvrmVqsJ3TFzpQbGk07dyJR/Fz+uQZZgyd2sYdrM9/CjfBO0hXCMkzR7pCSCQrCCkASUoj
      BSBJaaQAJCmNFIAkpZECkKQ0UgCSlEYKQJLSSAFIUhopAElKIwUgSWmkACQpjRSAJKWRApCk
      NFIAkpQmOQdlGxHaTh1n3PSwd/cW7Jpy9wluXzrLtb4J0O1s2b4bjzLBiWNtRBTILq1jZ11p
      MkKSrGCEGeXquVMMhuzs2tWMy6rNuUL0XT/HxdujoOps2rqPNS4fxw6dJawopBdVsa+xYkn3
      TooA2s8eRV23lR16P5+dvMZbezcCIIwYXZNx3nrnHe7ulRpsH6Kgfi9161aPl4xkeelqO004
      u4rd6TMcPXmZ/S9tRlEUBIL2QR9feOeduUT19twgo2oXr1dmL8u9kyKAobDC7sIMdDUD/dpB
      YFYApmEwPdTOxx/6yC2ppHFjOb7xIS4NDTPUlU1D0xZy3PZ5Lsp3N1FLXgzuNzuA2U3wo8EY
      tbW5uOxrcFw9SNwEqwYIgX+0gwMfRsgsKKN5cxUz4yPcuD2At89DfVMz+R4HS9kbnxQBaPed
      9q5p926h2Vx89Ru/ijDjtJ8/QutNN9t3vUsVAv/YbT4/ep433t6NZhgIITAMA8MwiMUSO6ZH
      snIxDANFUYjH43OmB6qqot7ZTK/p2p0fQAVF1fjSN/4bhDDouXyMU5fSeKnpLd5vEoS8Axw8
      corXv/QqS9kwmxQBWA2DqXCMLD1ANHbP0cE0IwSDApfLRmZONhPTIYL+AFaHA0e6BweDGIDt
      jmPAXfcAq3UVWQpKHomu6+i6Ps/pwwZ4A2EcSpxwRJs7S02IKAG/iSvNRlZ+Ll2dIUKBALrd
      gS0tnTRNYal2w0kRwObNlXx68GNMIajf+yamEeTy1V42Vhdw6dQpJiMxTN3Fnn01jHZe4lrv
      CHHDpGTjtiXbXEhWH9UbKzl87CCtcUH19lfQ1BhtbbfYXL+eK6ePMR6JYmBl18uvMNF3lUud
      g8QNg4LKRp7eE2IW6QoheaZIVwiJZAUhBSBJaaQAJCmNFIAkpZECkKQ0UgCSlEYKQJLSSAFI
      UhopAElKIwUgSWmkACQpjRSAJKWRApCkNFIAkpRGCkCS0iTnAFsR5+bF80wa6TRvqcEyt2nT
      ZKD9Ch1DXtCs1GzaQm6aQue1S0wYLjbXVWHXpSZTDhGn82obI2E7Wxpq78sBwcjta9zoGwdF
      o2JTEwUZFrpvXGI4aGHz5o04LUvLl6RkW1frcaYcRZRm+DlytuPeE0aMG70TbN6yhS0Nm8hM
      s9B//SyjIocie5CTbZ0PO3Nd8gLTd/UcwyKL8uw4x87cwLybBEJwrXNgNl+2NJDjtjHW2UJ3
      MJ31WXD83NUl50tSBNAzHaOxvJA15U2Yvq65x414DO/IbVrOnKN7eAZNizE8bFC7cR1FlVVY
      veOEkhGQZEUzMBWkbsM68ks3o0cGiN9RgBAC70gXLWfO0tE/iaabDPSE2NRYTn7pBtL80wSW
      eO/kuELoGsqdXf66fu8WqtXFu1//FqYR4+b541wQdZiqDaumoKBj18AE4vH4nCtELBZDVWWz
      6EXhrsNHLBZDURR0Xb/jDqGComCxWuZcIVBUfu7nfxnDNOi+dJzTVxSsqhW7pqCg4dDBWGI8
      SRGAEjMImyZpapRY5P5nTDTNhtVqY936tVwZDuPW/UwHTexqgGlFx8Y90WiahsViwWazJSNM
      yXMgHA4vcIXQTAhGY6RZBJGQOecKASaqZsNihXUVZQxc8ZNlDTLpN3FZI3iFuiRLFEiSABrr
      SvjZj/4JTcSo3vv2nCtEbVUeRz8+RlBVCMdV9r2+H2cADn70Q1BUKpteSlKvXLKSqaku5cCB
      n4KIU7b1dTRl1hWivr6Eoz89jF9TCIUNdr/xNlmGiwMf/4BWTaWkbjeWx7/8I5GuEJJninSF
      kEhWEFIAkpRGCkCS0kgBSFIaKQBJSiMFIElppAAkKY0UgCSlkQKQpDRSAJKURgpAktJIAUhS
      GikASUojBSBJaaQAJClNklwhDPpv32LGdFK1oQTtgaO8Y6Epegb9rC8vxghN0Xmrlxjgyi6i
      vCg7KSFJVjDCYKinE2/UyobydVgfSBgz6qeje4LyynWIqI+OG11EAbtnDZUleUu6dVJqgIGr
      Z+nwGii+Lk5e6pv3nDBjXG89xYlz14gCk4MdjAZVPB4PaQ55IHYqMtJxkRvDQbTQAKfabt9z
      hQCEMLl54STHz1wmAvjHbtM7JfB4PLidS98qmxQBdIz62dFQQ3XjbkKjN+97RuAduEnAuZ61
      mbPBz4yN4A8FmfZHcafJY7JTke6RKRrq66iq34E51YVxzxeFwGg7o0oJ63PsAPhGhwnGwnhn
      QrjdS99VlpQmkKpraIoCaOgWbe7xeHiaq90Btm7fxMnREQDWbtyF2x8mMNnP0RM+XnulEUW6
      QrywLOYKoagKFl2bdYWw6Yg7rhAiHqL12hjb9uzgzMF+APIqd7B9Jkh4ZoQjR1p4480dLKXd
      kJw+QMwgagp0NUYseq8+C00OMTI6yMEDQ3R1DiBy1/BKQwUF7kzIc9HX1UYUcElXiBeWxVwh
      FFMQjsVIs0AkbM5Z6kSnhhiZGOPQgY/o7ugmlFXA/q01FLgyID+DvlunCcPKE0DdhnwOH/wM
      JwHyqndjGmE6u0ao2FDD1/5ZDcSDHD50jp1byuk4f5oBv4GI+NCLKpdscyFZfVSuL+T40SM4
      1AjppU3oapz29j4qKsr4+tfKwYzx+YEjbNteTc/Fc3RNRVBjQYycEtKWeO/kuEIIQcA/Q0zo
      pLtdKBgEQ1FcTsfc8+FIFJvdhjBi+P0BhKLjSnOhq/dGAKQrxIvHoq4QQhAM+IiaKuluF6oi
      CATCOJ2O2dpACCKRCBa7HYw4Ab8fA420NBe69vTNY0VRFGmLInmmSFsUiWQFIQUgSWmkACQp
      jRSAJKVJbBhUiAUHEtwds5VIViMJCWBmpIO/+LM/Z81Lv0pTxhTkV1GWn56s2CSSJSGMGD3t
      l9HyanARIN2TtWDYNKEm0MUzR6nftx+bEiJNC3Krf2xZA5ZIlpPTP/sb/u7vv09rt5fhC8e4
      NLLwPJmEBOB0OhgaHGJqtJ+PD55Ct8rxecnKZTwYZf8ru7GqBkbMi3dm4XkyCTWBGva+zfTB
      j7nR08u6xjfZU1uwbMFKJMtNfWUZf/kPP8VrnEGx5PJ7Ly+cfHuimeDw9DAf/P3fMuqf//jO
      t7/FjsrcZQv4QeRM8IvHs5gJNuMRpqZ9mAKMeBifP4Y7I40MTzb2+45VVRRFeaIaQLen07Tz
      ZUKx+Y+vyV3qUiSJZPnxD3fwx3/yHSYfOHL06//y37CjbH7OJrQWyDvcxbTIRJu6zuHWYd56
      923y3MnbxSVrgBePZ7kWKB4NY6oWiAWZCZlkZaaj3jdsn/BaoKstRwgaYQ5+co50fYbWWwPL
      HrREslycO/IRvRPT/PA7/4n/+w/+H25Nhhdck5AALIrgxEc/IlTYQP36fCxyp5ZkBTM+MYKY
      bGcsbTvf/rkqBsaXKID63W9RW7WJr7yxFVd+BQ0b1ix+oTDxjg4xODI5b4PzXYxokJFRLyYg
      TIOp8RGGRifnTgiXpBjCZGp8hMGR8UVzwIyHGR6emM0XYTI9McrgyDgx49H5sr4gl7/+m49o
      2LmZ8Wmdklz7gmsS6gPcbv2UHx2+CHd++Xe+8z47FxkFGuto5XxfGI8yg1rQyLaq/Pveq0F7
      y0GO3jT51vtfINB1ifO3fbj1MJb8Gpqri7jbSpN9gBePxfoAkz1XONfpxaOHMbOq2bFxLXeb
      6kKYdLV9zoHWGf75r36J2MANTl4dJctpEE9fz6769TxsMU5gapS+oQkEYMTjFJXXkOm8N+7z
      xKNAdxno72X3O9+gPGe24+t0exa97nrvBPv2voZDj/PJp8dhTgAC3+htRsUayvKmgDi93RNs
      2fMKOeo0R47eJFpdhNwBnFp09o3SvH0v2U44fOgo8ZpiLJoCCMJTvXQHsqguNDiJmoMAAAno
      SURBVAGT3luDbN73CgV6iGOftxFm/UO30R7+4X+lL56H2z6b5rb8inkCgAQnwgoKizl84hAD
      mbPqrdn2GjXFGQuuU3QNi6oAFizWe/o0ogGu3BqlcWsDZ4+0AAYx4cRlU1Cwk6aYxABNukK8
      sCzmCiFUBZtFB0XBatfuuUIYUS5c7KZ55y5aDx8FTMKmnXS7ioIFtyqIwkMFkLOuhuqKHeTe
      Gal0pC0csUxIAIN9t8kt2UyxZ3ZHf4Zz8YPqRdwgLgQ6BvGYOfd4YLSbrv5BJqfG7rhC5JBJ
      iGBU4FAiBISKDujSFeKFZTFXCExBNB4Hi0I0YtxzhZjsobN/hMlPP77jCpFHkRLGFzFx6TH8
      psLiGXjnXqPd/PWJK7hss/m0/xv/LZuL53tPJSSA9Kw1xO0ZZGfPas5h1Ra9rqrIw/HT58lS
      pkgvrkOYMYZGvBQW1/HN9+ruc4WoxdcZ5cKps2TqQWwFG2TzJwUpK8rh/LnzZFtD2HI3oKsm
      AwNjFBZW8P63Ku9zhdhEtO8qp4+fZigtDtlFj3QRibty+K1//Vvkux+e5gl1gtsOfp8Drb3o
      2mzi73rnl9hZtchSCGEwNjRA0LRTXJSHKmKMTfjIy82ae356OoDbk45ixpkYGSIobBTk595p
      +80iO8EvHou7QphMjAzii+kUF+Wjqyajo15yc7PnXCGmp6ZJy/Sg3hlh9MVUCgrWLPARvZ+P
      vvsHtIwouG2z9cRrX/91NhXdqwESdoXoa7+CJb+cNRnPJiGlAF48nuVM8Gh/J96gMTf7m1e8
      ngzH/FGghHqXvqGbHDzeRvQx468SyUqg5fDHBB15VFRUUFFRMS/575JQHyASCdJ64G+5du5T
      3DYLe7/8q+ypWZo9tUSSLKpqyvnpj3+IsXcrTl2loLRyacOgaTlr+fK36iktyEZVID1r8XkA
      iWQlMOn1ohoznDr6Oaqi8PJX1i9NALoK1859ztlAnMyCIva9/kXSndLTX7Iy8XknEHYPG2tq
      2dxQR3bawr5kQn2Aoqot7NvRzNqiXIJjfQx5g8sWrESy3Ox655f42lt7ERO3+D9+5zc5dHN6
      wTUJ1QAn/+m/8PENePOt/XzhyxXLckKHRJIsrrcc4lLnFMLm4hd/43+itmzhBq6EaoDdX/4t
      /sff/AbOYDf/8d/8Hj9t6Xt8IYnkOaGrKhHDxK5DX3cHvvASN8V3tX3GP3x8mpgljXWb91G/
      PmvZgpVIlpvaba+ju9o419rK+VO3WFP/EgXp8/usCU2ETY0NgyMdl92GrqlJd4WTE2EvHs9y
      IuzID/8/Ovwetu3aQVlhLg6bDVWdvyUyIQF0nPkJf/L9T4mZsy/y1i//Ll9oLFr+yO8gBfDi
      8SwFEPIOc/nm7bmNM+WbtrEm/b6jmRLdDzAy4eXXf///oixrdi2Qqi6+GE4iWQkc+ODPGdHW
      4bbNdnXzK5ogff760cQmwhxOTh76iMGC2Qmw0tpmSvOkNYpkZZJXtpltDa+RnzHb7l9sX0lC
      AnBn5uIaH2VsbNYTNDccxTAFmiodoiUrj/Ebp/jO33+I0zr7q/+L/+rfsavcPe+aJZ0RNn7j
      c1pDpbzZWLqkQB+G7AO8eDzPM8J8A9cYt5ezPnt2/irhPsCDCMMgvsjKUDMepPXUSSaNdPbs
      acapz1Y9woxz++p5bvaNk5azjm1bajF8Axw/1kZMVcgurWNnXelSQpKsQsx4mMvnTjEctrNz
      51bcdh0FEELQe/0817qHsXmK2bmtHjUyypGD54hqCulFVexrrHji+8z0XaIzc+2cACBJ5wTf
      PHsCe9k2dumDHDl5jbf21QEgTIEzp4T9G7cycP00F64Psc42RFHDPupKFu4tlqQGXZfOYuRt
      ZE/GDMdOXeaNlxvQlNlN8ZaMNbz5hS1MdLdwurWXhrxJMmt3s7VieeagEj4hJhaNYKoWdFWg
      Wp2kiYW7MkciCrvXpKOr6ehXDgKzAlB1C3nZHrxjg/SPhSmsy8TfcYHLA6MMdniob2oiP8Mx
      exLNnZaZEALTNBfcQ7I6EXe+W9OcPRFeURTGgjE21mbjsufhUA5imKBpoCgqa/Jy8U4M093n
      o6iqFt/gTW7eHmCyJ52NW5opynI91Bbl/nsAoKgLrk1IABO9V/irv/wbCl/6FZozvMRyqtlX
      kbngOvW+UzgeHCoNT49y7UY3htDQFKjc8Q6VCAIT3Xx+vJXX3t6Nbhhzb8AwDOLxeCJhSlYw
      hmGgqupccmqahqrem1RVNY37z+GK+ce5dr2DuKGQqyqUbNnPt7YIQtODHPr8DNlfevWh+4KP
      f/iPFO16m/Ls2f5G5oYd1Fnmm2MlJICrbWdpeuULeIng0kJcGJqgqmihAOymwWQoSrbuJ2bc
      u6EwY6hpa9i7r4Tp4XbabnWRaVmL1ZmGzeXGpghM7rlCqKqKrutYrXLJ9YuCrutomjb3HQPY
      FYUJXxA7McIRy13fNYSIY9iy2bO3kNBUL8fbbpBnr8DiTMPqcOHUFBau7rlHQa6Tzz89ivP1
      7dg1BWd6MfmW+UOhCQnAk5FB681bhPQ0Phi+zaYv/dqi19VvrubwZ58QFwqb97yOaQS5fLWX
      jdUFtBw9wXTMRNXtbNq6ncn+W1ztHiJuQOmmrTgXfUXJi0zVxiqOHP+ci3Go3f4Smhqjre0W
      m+tLuXD8KN6ogaJaqGneyfRIN5du9REzBEVVjTxqFqqv5zbtLb20XzqGRVX50rd/n63r5o8+
      JTQMakT8XDh7ko7+KYqr6tm2ueqRu/KXihwGffF4lsOgft80DlcGmgrRoB/D4sBhudckT3hT
      fMe1Vkqb3uQX3/t5NuUpdAyML3vQEslyYBpxjhz4gIlAnHg8Ts+5n3Gux7fguiduAo33tXP8
      6GfkTztZkwaD189i3fgOtSXLGrdEsiyc/tlf8pOPP+fc9RFsFpW4aeWbv7nQHfqJBTA91s/o
      ZIBw5w2m7Bq5Jc3srC1c1qAlkuWi4eWvomSspbiyEYdFw52ejtWycPFmQn2AwIwXiyuThzgi
      LjuyD/Di8TyXQjxIwn0AV/q95DfiMQx5oIVklfCwfH1q3/FjH/wRhy8PLSkoieRZ8eF3/09a
      ehaeFP/Ua4Ga3nwPYVs4CSaRrBQmh3uZ9EcBKKp7BZvpwzBd85bvJySA9tMf8pNj1xEKmKaB
      7sjklS9+mYbyvIeux5BInheXTnzImc4QVovCxPAwjgwXFxrf5ZtfaOCuBhISgHd6km2vf5li
      j8ZgextexcmZQ5+yoeSbuB91UoFE8hyYiWn80m/+NgVunY6jHzBSsIeOEx8SNxvm+rIJ9QHM
      aITR6SDZ2ZnEZ8ZRssoodBsYcrGmZAVSVuDhz/7oj/j+977LXx64To4ziMVRzH1rNfn/AUP5
      8AW3BoDvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Performance by Split' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NWRMLSE vs NWRMLSE_UW' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RMSE vs NWRMLSE' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
